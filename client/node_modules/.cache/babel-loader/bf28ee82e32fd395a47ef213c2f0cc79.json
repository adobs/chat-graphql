{"ast":null,"code":"var _jsxFileName = \"/Users/adobkin7/Documents/personal/Dobs/chat-grqphql/client/src/chat.js\";\nimport React from 'react';\nimport { useSubscription, useQuery } from '@apollo/react-hooks';\nimport { CHATS_QUERY, MESSAGE_SENT_SUBSCRIPTION } from './graphql';\nexport function UpdateChat() {\n  const {\n    data,\n    loading,\n    error\n  } = useSubscription(MESSAGE_SENT_SUBSCRIPTION);\n  if (loading) return null;\n  if (error) return `Error! ${error.message}`;\n  const {\n    messageSent\n  } = data;\n  return React.createElement(\"div\", {\n    key: messageSent.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, messageSent.from), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, messageSent.message));\n}\nexport function Chat() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(CHATS_QUERY);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, data.chats.map(chat => React.createElement(\"div\", {\n    key: chat.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, chat.from), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, chat.message))));\n}\n;","map":{"version":3,"sources":["/Users/adobkin7/Documents/personal/Dobs/chat-grqphql/client/src/chat.js"],"names":["React","useSubscription","useQuery","CHATS_QUERY","MESSAGE_SENT_SUBSCRIPTION","UpdateChat","data","loading","error","message","messageSent","id","from","Chat","chats","map","chat"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,QAA1B,QAAyC,qBAAzC;AACA,SAASC,WAAT,EAAsBC,yBAAtB,QAAuD,WAAvD;AAEA,OAAO,SAASC,UAAT,GAAsB;AACzB,QAAM;AAAEC,IAAAA,IAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA4BP,eAAe,CAC7CG,yBAD6C,CAAjD;AAIA,MAAIG,OAAJ,EAAa,OAAO,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACC,OAAQ,EAA/B;AAEX,QAAM;AAAEC,IAAAA;AAAF,MAAkBJ,IAAxB;AACA,SACI;AAAK,IAAA,GAAG,EAAEI,WAAW,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,WAAW,CAACE,IAAnB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,WAAW,CAACD,OAAlB,CAFJ,CADJ;AAMH;AAED,OAAO,SAASI,IAAT,GAAgB;AACnB,QAAM;AAAEN,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBF,IAAAA;AAAlB,MAA2BJ,QAAQ,CAACC,WAAD,CAAzC;AAEA,MAAII,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACC,OAAQ,EAA/B;AAEX,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,IAAI,CAACQ,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAChB;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACL,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOK,IAAI,CAACJ,IAAZ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMI,IAAI,CAACP,OAAX,CAFJ,CADH,CADL,CADJ;AAUH;AAAA","sourcesContent":["import React from 'react';\nimport { useSubscription, useQuery} from '@apollo/react-hooks';\nimport { CHATS_QUERY, MESSAGE_SENT_SUBSCRIPTION } from './graphql';\n\nexport function UpdateChat() {\n    const { data , loading, error } = useSubscription(\n        MESSAGE_SENT_SUBSCRIPTION\n    );\n\n    if (loading) return null\n    if (error) return `Error! ${error.message}`;\n\n    const { messageSent } = data;\n    return (\n        <div key={messageSent.id}>\n            <span>{messageSent.from}</span>\n            <div>{messageSent.message}</div>\n        </div>\n    )\n}\n\nexport function Chat() {\n    const { loading, error, data } = useQuery(CHATS_QUERY);\n\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n    return (\n        <div>\n            {data.chats.map(chat => (\n                <div key={chat.id}>\n                    <span>{chat.from}</span>\n                    <div>{chat.message}</div>\n                </div>\n            ))}\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}